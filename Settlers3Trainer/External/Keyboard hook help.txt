
        public void KeyReader(IntPtr wParam, IntPtr lParam)
        {
            int key = Marshal.ReadInt32(lParam);
            KeyboardHook.VK vk = (KeyboardHook.VK)key;
            String temp = "";

            switch (vk)
            {
                case KeyboardHook.VK.VK_F1: temp = "<-F1->";
                    break;
                case KeyboardHook.VK.VK_F2: temp = "<-F2->";
                    break;
                case KeyboardHook.VK.VK_F3: temp = "<-F3->";
                    break;
                case KeyboardHook.VK.VK_F4: temp = "<-F4->";
                    break;
                case KeyboardHook.VK.VK_F5: temp = "<-F5->";
                    break;
                case KeyboardHook.VK.VK_F6: temp = "<-F6->";
                    break;
                case KeyboardHook.VK.VK_F7: temp = "<-F7->";
                    break;
                case KeyboardHook.VK.VK_F8: temp = "<-F8->";
                    break;
                case KeyboardHook.VK.VK_F9: temp = "<-F9->";
                    break;
                case KeyboardHook.VK.VK_F10: temp = "<-F10->";
                    break;
                case KeyboardHook.VK.VK_F11: temp = "<-F11->";
                    break;
                case KeyboardHook.VK.VK_F12: temp = "<-F12->";
                    break;
                case KeyboardHook.VK.VK_NUMLOCK: temp = "<-numlock->";
                    break;
                case KeyboardHook.VK.VK_SCROLL: temp = "<-scroll>";
                    break;
                case KeyboardHook.VK.VK_LSHIFT: temp = "<-left shift->";
                    break;
                case KeyboardHook.VK.VK_RSHIFT: temp = "<-right shift->";
                    break;
                case KeyboardHook.VK.VK_LCONTROL: temp = "<-left control->";
                    break;
                case KeyboardHook.VK.VK_RCONTROL: temp = "<-right control->";
                    break;
                case KeyboardHook.VK.VK_SEPERATOR: temp = "|";
                    break;
                case KeyboardHook.VK.VK_SUBTRACT: temp = "-";
                    break;
                case KeyboardHook.VK.VK_ADD: temp = "+";
                    break;
                case KeyboardHook.VK.VK_DECIMAL: temp = ".";
                    break;
                case KeyboardHook.VK.VK_DIVIDE: temp = "/";
                    break;
                case KeyboardHook.VK.VK_NUMPAD0: temp = "0";
                    break;
                case KeyboardHook.VK.VK_NUMPAD1: temp = "1";
                    break;
                case KeyboardHook.VK.VK_NUMPAD2: temp = "2";
                    break;
                case KeyboardHook.VK.VK_NUMPAD3: temp = "3";
                    break;
                case KeyboardHook.VK.VK_NUMPAD4: temp = "4";
                    break;
                case KeyboardHook.VK.VK_NUMPAD5: temp = "5";
                    break;
                case KeyboardHook.VK.VK_NUMPAD6: temp = "6";
                    break;
                case KeyboardHook.VK.VK_NUMPAD7: temp = "7";
                    break;
                case KeyboardHook.VK.VK_NUMPAD8: temp = "8";
                    break;
                case KeyboardHook.VK.VK_NUMPAD9: temp = "9";
                    break;
                case KeyboardHook.VK.VK_Q: temp = "q";
                    break;
                case KeyboardHook.VK.VK_W: temp = "w";
                    break;
                case KeyboardHook.VK.VK_E: temp = "e";
                    break;
                case KeyboardHook.VK.VK_R: temp = "r";
                    break;
                case KeyboardHook.VK.VK_T: temp = "t";
                    break;
                case KeyboardHook.VK.VK_Y: temp = "y";
                    break;
                case KeyboardHook.VK.VK_U: temp = "u";
                    break;
                case KeyboardHook.VK.VK_I: temp = "i";
                    break;
                case KeyboardHook.VK.VK_O: temp = "o";
                    break;
                case KeyboardHook.VK.VK_P: temp = "p";
                    break;
                case KeyboardHook.VK.VK_A: temp = "a";
                    break;
                case KeyboardHook.VK.VK_S: temp = "s";
                    break;
                case KeyboardHook.VK.VK_D: temp = "d";
                    break;
                case KeyboardHook.VK.VK_F: temp = "f";
                    break;
                case KeyboardHook.VK.VK_G: temp = "g";
                    break;
                case KeyboardHook.VK.VK_H: temp = "h";
                    break;
                case KeyboardHook.VK.VK_J: temp = "j";
                    break;
                case KeyboardHook.VK.VK_K: temp = "k";
                    break;
                case KeyboardHook.VK.VK_L: temp = "l";
                    break;
                case KeyboardHook.VK.VK_Z: temp = "z";
                    break;
                case KeyboardHook.VK.VK_X: temp = "x";
                    break;
                case KeyboardHook.VK.VK_C: temp = "c";
                    break;
                case KeyboardHook.VK.VK_V: temp = "v";
                    break;
                case KeyboardHook.VK.VK_B: temp = "b";
                    break;
                case KeyboardHook.VK.VK_N: temp = "n";
                    break;
                case KeyboardHook.VK.VK_M: temp = "m";
                    break;
                case KeyboardHook.VK.VK_0: temp = "0";
                    break;
                case KeyboardHook.VK.VK_1: temp = "1";
                    break;
                case KeyboardHook.VK.VK_2: temp = "2";
                    break;
                case KeyboardHook.VK.VK_3: temp = "3";
                    break;
                case KeyboardHook.VK.VK_4: temp = "4";
                    break;
                case KeyboardHook.VK.VK_5: temp = "5";
                    break;
                case KeyboardHook.VK.VK_6: temp = "6";
                    break;
                case KeyboardHook.VK.VK_7: temp = "7";
                    break;
                case KeyboardHook.VK.VK_8: temp = "8";
                    break;
                case KeyboardHook.VK.VK_9: temp = "9";
                    break;
                case KeyboardHook.VK.VK_SNAPSHOT: temp = "<-print screen->";
                    break;
                case KeyboardHook.VK.VK_INSERT: temp = "<-insert->";
                    break;
                case KeyboardHook.VK.VK_DELETE: temp = "<-delete->";
                    break;
                case KeyboardHook.VK.VK_BACK: temp = "<-backspace->";
                    break;
                case KeyboardHook.VK.VK_TAB: temp = "<-tab->";
                    break;
                case KeyboardHook.VK.VK_RETURN: temp = "<-enter->";
                    break;
                case KeyboardHook.VK.VK_PAUSE: temp = "<-pause->";
                    break;
                case KeyboardHook.VK.VK_CAPITAL: temp = "<-caps lock->";
                    break;
                case KeyboardHook.VK.VK_ESCAPE: temp = "<-esc->";
                    break;
                case KeyboardHook.VK.VK_SPACE: temp = " "; //was <-space->
                    break;
                case KeyboardHook.VK.VK_PRIOR: temp = "<-page up->";
                    break;
                case KeyboardHook.VK.VK_NEXT: temp = "<-page down->";
                    break;
                case KeyboardHook.VK.VK_END: temp = "<-end->";
                    break;
                case KeyboardHook.VK.VK_HOME: temp = "<-home->";
                    break;
                case KeyboardHook.VK.VK_LEFT: temp = "<-arrow left->";
                    break;
                case KeyboardHook.VK.VK_UP: temp = "<-arrow up->";
                    break;
                case KeyboardHook.VK.VK_RIGHT: temp = "<-arrow right->";
                    break;
                case KeyboardHook.VK.VK_DOWN: temp = "<-arrow down->";
                    break;
                default: break;
            }
        }